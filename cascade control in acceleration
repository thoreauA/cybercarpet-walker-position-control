
%% LHI MODULE

%% system
syms x(t) y(t) theta(t) real
assume([x(t) y(t) theta(t)], 'real')
%states = [x; y; theta; v; omega];
%inputs = [a; ar];

%{
xdot = omega*y -v*cos(theta);
ydot = -omega*x -v*sin(theta);
thetadot = omega;
vdot = a;
omegadot= ar;

ode = [xdot; ydot; thetadot; vdot; omegadot];

A = jacobian(ode, states);
B = jacobian(ode, inputs);

ref = [0; 0; 0; 10; 5];
A = subs(A,{x; y; theta; v; omega}, {0; 0; 0; 10; 5});

R = ctrb(A,B);
cr = rank(R)
%}

k= 4;

v = k*(x^2 + y^2)*sign(x*cos(theta)+y*sin(theta));
omega = k*(y*cos(theta)-x*sin(theta))*sign(x*cos(theta)+y*sin(theta));

xdot = diff(x, t) == y*omega -v*cos(theta);
ydot = diff(y, t) == -x*omega -v*sin(theta);
thetadot = diff(theta, t) == omega;

condx = x(0) == 0;
condy = y(0) == 0;
condtheta = theta(0) == 0;

odes = [xdot; ydot; thetadot]
conds = [condx; condy; condtheta]

S = dsolve(odes,conds)
